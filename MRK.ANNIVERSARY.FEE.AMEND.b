	SUBROUTINE MRK.ANNIVERSARY.FEE.AMEND(ACCT.REC)

	*--------------------------------------------------------------
	* 	Activity routine to Update Payment Fee Schedule of A Loan 
	* 	2022-05-26
	*	Taofeek Alao
	*	0 for Retail & 50,000 for Corporate
	*--------------------------------------------------------------

	$INSERT I_COMMON
	$INSERT I_EQUATE
	$INSERT I_AA.LOCAL.COMMON
	$INSERT I_F.AA.ACCOUNT
	$INSERT I_F.ACCOUNT
	$INSERT I_F.AA.ARRANGEMENT
    $INSERT I_AA.APP.COMMON
    $INSERT I_F.AA.ARRANGEMENT.ACTIVITY
	$INSERT I_BATCH.FILES
    $INSERT I_F.AA.PROPERTY
    $INSERT I_F.AA.ACCOUNT.DETAILS
    $INSERT I_F.AA.PAYMENT.SCHEDULE
	$INSERT I_MRK.ANNIVERSARY.FEE.AMEND


	OPENSEQ '&SAVEDLISTS&','CHANGE.FEE.ERR.LOG':'_':SESSION.NO TO Y.OUTPUT.PATH ELSE
		CALL OCOMO ("Cannot Open Flat File")
	END
	
	OPENSEQ '&SAVEDLISTS&','CHANGE.SUCC.LOG':'_':SESSION.NO TO Y.OUTPUT.PATH1 ELSE
		CALL OCOMO ("Cannot Open Flat File")
	END

	CHARGE.RATE = ''
	CHARGE.AMOUNT = ''
	
	DEBUG
    ACC.ID = ACCT.REC[',',1,1]
	
    CALL F.READ(FN.ACCT,ACC.ID,RV.ACCT,FV.ACCT,ACC.ERR)
	IF (ACC.ERR) THEN
		WRITESEQ ACC.ID:"|":ACC.ERR TO Y.OUTPUT.PATH ELSE
			CALL OCOMO ("Cannot Update Log Files")
		END
		RETURN		
	END
	
    AAR.ID = RV.ACCT<AC.ARRANGEMENT.ID>
    CALL F.READ(FN.AA.ARRANGEMENT,AAR.ID,AA.REC,FV.AA.ARRANGEMENT,ARR.ERR)
	
	IF AA.REC<AA.ARR.PRODUCT.LINE> NE 'LENDING' THEN
		WRITESEQ ACC.ID:"|":"Arrangement Not Lending" TO Y.OUTPUT.PATH ELSE
			CALL OCOMO ("Cannot Update Log Files")
		END
		RETURN
	END
	
	IF AA.REC<AA.ARR.ARR.STATUS> EQ 'CLOSE' OR AA.REC<AA.ARR.ARR.STATUS> EQ 'CLOSED' OR AA.REC<AA.ARR.ARR.STATUS> EQ 'EXPIRED' OR AA.REC<AA.ARR.ARR.STATUS> EQ 'PENDING.CLOSURE' OR AA.REC<AA.ARR.ARR.STATUS> EQ 'UNAUTH'  OR AA.REC<AA.ARR.ARR.STATUS> EQ 'REVERSED' THEN
		WRITESEQ ACC.ID:"|":"Arrangement Cannot Be Processed Because Status Is ":"|":AA.REC<AA.ARR.ARR.STATUS> TO Y.OUTPUT.PATH ELSE
			CALL OCOMO ("Cannot Update Log Files")
		END
		RETURN
	END
	
	*	Get Original Contract Date And Compare With Today's Date To Adjust Effective Date Appropriately
	ORIGINAL.CONTRACT.DATE = AA.REC<AA.ARR.ORIG.CONTRACT.DATE>
	ARRANGEMENT.START.DATE = AA.REC<AA.ARR.START.DATE>
	ARRANGEMENT.CURRENCY = AA.REC<AA.ARR.CURRENCY>
	ARR.STATUS = AA.REC<AA.ARR.ARR.STATUS>
	
	*	Getting The Original Contract Date Of The Arrangement
	*	To Extract Anniversary And Use To Calculate Start Date
	IF NOT(ORIGINAL.CONTRACT.DATE) THEN
		WRITESEQ ACC.ID:"|":"Original Contract Date Missing" TO Y.OUTPUT.PATH ELSE
			CALL OCOMO ("Cannot Update Log Files")
		END
		RETURN
		* Use another date that may be advised by the bank
		*
		*
		*
		******
	END
	
	*	Date Afte Which All Bookings Were Fine
	*	As Mentioned By The Bank Is October 18, 2021
	*	Any Arrangement Beyond Is Therefor Skipped
	IF ORIGINAL.CONTRACT.DATE > '20211018' THEN
		WRITESEQ ACC.ID:"|":"Original Contract Date Greater Than January 18, 2021" TO Y.OUTPUT.PATH ELSE
			CALL OCOMO ("Cannot Update Log Files")
		END
		*RETURN
		* Reconsider After The Bank Advises
	END
	

	IF ORIGINAL.CONTRACT.DATE GE TODAY THEN
		EFFECTIVE.DATE = ORIGINAL.CONTRACT.DATE
	END ELSE
		EFFECTIVE.DATE = ORIGINAL.CONTRACT.DATE
		LOOP
			IF EFFECTIVE.DATE GE TODAY THEN
				BREAK   ;* end of list reached
			END
			DEBUG
			CALL CDT ('',EFFECTIVE.DATE,"365C")
			EFFECTIVE.DATE = EFFECTIVE.DATE[1,4]:ORIGINAL.CONTRACT.DATE[5,2]:ORIGINAL.CONTRACT.DATE[7,2]
		REPEAT	
	END
	
	*	Extract Day & Month To Be Used In The Frequency
	*	20220626
	MON = EFFECTIVE.DATE [5,2]
	DAY = EFFECTIVE.DATE [7,2]
	
	*	Determine Category Where Account Belongs And Assigns Appropriately
	*	Before September 2020
	IF ORIGINAL.CONTRACT.DATE < '20201001' THEN
		CALC.TYPE.VAL = "FLAT"
		TIER.MIN.CHARGE = ""
		TIER.MAX.CHARGE = ""

		*	Determining If Arrangement Is Retail or Corporate
		*	Using Arrangement Product
		LOCATE AA.REC<AA.ARR.PRODUCT> IN RETAIL.LIST  SETTING PROD.POS THEN
			*	Retail Arrangement Classification Pre September 2020
			CHARGE.RATE = '0'
			CHARGE.AMOUNT = 0						
		END ELSE
			*	Corporate Arrangement Classification Pre September 2020
			CHARGE.RATE = '0'
			CHARGE.AMOUNT = 50000			
	
		END
	END

	*	Determine Category Where Account Belongs And Assigns Appropriately
	*	After September 2020
	*	Before Ocotber 2021
	IF ORIGINAL.CONTRACT.DATE > '20200930' AND ORIGINAL.CONTRACT.DATE < '20211031' THEN
		CALC.TYPE.VAL = "PERCENTAGE"
		CHARGE.RATE = "1"
		CHARGE.AMOUNT = "0"
		TIER.MIN.CHARGE = "5000"
		TIER.MAX.CHARGE = "50000"
	END

	*	Determine Category Where Account Belongs And Assigns Appropriately
	*	After Ocotber 2021
	* 	Block Suspended For Now Pending Clarification Since
	*	Initial Comment Says This Class Has No Problem
	*IF ORIGINAL.CONTRACT.DATE > '20211031' THEN
	*	CALC.TYPE.VAL = "PERCENTAGE"
	*	CHARGE.RATE = "1"
	*	CHARGE.AMOUNT = "0"
	*END

    IF AA.REC THEN
		GOSUB GET.SCHEDULE.PROPERTLY.NAME
		FINDSTR 'ANNIVERFEE' IN PROPERTIES SETTING V.FLD, V.VAL, V.SUB.VAL THEN
			GOSUB CHANGE.REPAYMENT.FEE.RATE
			GOSUB CHANGE.REPAYMENT.FREQ
		END ELSE
			WRITESEQ ACC.ID:"|":"Arrangement Does Not Have ANNIVERFEE Property " TO Y.OUTPUT.PATH ELSE
				CALL OCOMO ("Cannot Update Log Files")
			END			
		END
	END				
	
	RETURN


	CHANGE.REPAYMENT.FEE.RATE:
		AAA.REQUEST = ''
		CHANGE.ACTIVITY = "LENDING-CHANGE-ANNIVERFEE"
		
		AAA.REQUEST<AA.ARR.ACT.ARRANGEMENT> = AAR.ID
		AAA.REQUEST<AA.ARR.ACT.ACTIVITY> = CHANGE.ACTIVITY
		AAA.REQUEST<AA.ARR.ACT.EFFECTIVE.DATE> = TODAY				  
		AAA.REQUEST<AA.ARR.ACT.PROPERTY,1> = "ANNIVERFEE"

		AAA.REQUEST<AA.ARR.ACT.FIELD.NAME,1,1> = "CALC.TIER.TYPE"
		AAA.REQUEST<AA.ARR.ACT.FIELD.VALUE,1,1> = CALC.TIER.TYPE.VAL
		AAA.REQUEST<AA.ARR.ACT.FIELD.NAME,1,2> = "CALC.TYPE"
		AAA.REQUEST<AA.ARR.ACT.FIELD.VALUE,1,2> = CALC.TYPE.VAL
		AAA.REQUEST<AA.ARR.ACT.FIELD.NAME,1,3> = "CHARGE.RATE"
		AAA.REQUEST<AA.ARR.ACT.FIELD.VALUE,1,3> = CHARGE.RATE
		AAA.REQUEST<AA.ARR.ACT.FIELD.NAME,1,4> = "CHG.AMOUNT"
		AAA.REQUEST<AA.ARR.ACT.FIELD.VALUE,1,4> = CHARGE.AMOUNT
		AAA.REQUEST<AA.ARR.ACT.FIELD.NAME,1,5> = "CURRENCY"
		AAA.REQUEST<AA.ARR.ACT.FIELD.VALUE,1,5> = ARRANGEMENT.CURRENCY
		AAA.REQUEST<AA.ARR.ACT.FIELD.NAME,1,6> = "TIER.MIN.CHARGE"
		AAA.REQUEST<AA.ARR.ACT.FIELD.VALUE,1,6> = TIER.MIN.CHARGE
		AAA.REQUEST<AA.ARR.ACT.FIELD.NAME,1,7> = "TIER.MAX.CHARGE"
		AAA.REQUEST<AA.ARR.ACT.FIELD.VALUE,1,7> = TIER.MAX.CHARGE		
		
        options = ""

        FUNCT = "I"
        ARR.ACTIVITY.ID = ""
        CALL AA.GET.ARRANGEMENT.ACTIVITY.ID("USER", ARR.ACTIVITY.ID)
        options<4> = ""

        options<1> = "AA.COB"
        theResponse = ""
        txnCommitted = ""
        APP.NAME = "AA.ARRANGEMENT.ACTIVITY"

        OFS.RECORD = ''
        OFSVERSION = APP.NAME:","
        NO.OF.AUTH = "0"

        OFS.RECORD = ""
        requestCommitted = ""
        ID.COMPANY = AA.REC<AA.ARR.CO.CODE>
        CALL LOAD.COMPANY(ID.COMPANY)
*DEBUG
        CALL OFS.BUILD.RECORD(APP.NAME, FUNCT, "PROCESS", OFSVERSION, "", NO.OF.AUTH, ARR.ACTIVITY.ID, AAA.REQUEST, OFS.RECORD)
        CALL OFS.CALL.BULK.MANAGER(options, OFS.RECORD, theResponse, txnCommitted)
		GOSUB LOG.REPORT
	
	RETURN

	CHANGE.REPAYMENT.FREQ:
	**********************

		AAA.REQUEST = ''    
		Y.OFS.PRO.VAL.1 = ''
		
		CHANGE.ACTIVITY = "LENDING-CHANGE-SCHEDULE"
        AAA.REQUEST<AA.ARR.ACT.ARRANGEMENT> = AAR.ID
		AAA.REQUEST<AA.ARR.ACT.ACTIVITY> = CHANGE.ACTIVITY
		AAA.REQUEST<AA.ARR.ACT.EFFECTIVE.DATE> = TODAY
		AAA.REQUEST<AA.ARR.ACT.PROPERTY,1> = AA.PROPERY.NAME
		
		FREQUENCY = "e1Y o":MON:"M e0W o":DAY:"D e0F"
		options = ""

		FUNCT = "I"
		ARR.ACTIVITY.ID = ""
		CALL AA.GET.ARRANGEMENT.ACTIVITY.ID("USER", ARR.ACTIVITY.ID)
		options<4> = ""

		options<1> = "AA.COB"
		theResponse = ""
		txnCommitted = ""
		APP.NAME = "AA.ARRANGEMENT.ACTIVITY"

		OFS.RECORD = ''
		OFSVERSION = APP.NAME:","
		NO.OF.AUTH = "0"

		OFS.RECORD = ""
		requestCommitted = ""
		ID.COMPANY = AA.REC<AA.ARR.CO.CODE>
		CALL LOAD.COMPANY(ID.COMPANY)
	
		CALL F.READ(FN.AA.ARRANGEMENT.DATED.XREF,AAR.ID,R.AA.ARR.DATED.XREF,F.AA.ARRANGEMENT.DATED.XREF,AA.ERR)
		
		LOCATE AA.PROPERY.NAME IN R.AA.ARR.DATED.XREF<1,1> SETTING POS.XREF THEN
			ID.PS = AAR.ID:"-":AA.PROPERY.NAME:"-":R.AA.ARR.DATED.XREF<2,POS.XREF,1>
			CALL F.READ(FN.AA.ARR.PAYMENT.SCHEDULE,ID.PS,R.AA.PS.REC,F.AA.ARR.PAYMENT.SCHEDULE,PS.ERR)
			IF NOT(PS.ERR) THEN
				PAY.CNT = DCOUNT(R.AA.PS.REC<AA.PS.PAYMENT.TYPE>,VM)
			END ELSE
				WRITESEQ ACC.ID:"|":"No Payment Schedule Record Found ":PS.ERR  TO Y.OUTPUT.PATH ELSE
					CALL OCOMO ("Cannot Update Log Files")
				END
				RETURN
			END
		END
		
		*	Logging Error For Missing Property On Arrangement
		*
		IF NOT(POS.XREF) THEN
			WRITESEQ ACC.ID:"|":"Arrangement Does Not Contain ":AA.PROPERY.NAME  TO Y.OUTPUT.PATH ELSE
				CALL OCOMO ("Cannot Update Log Files")
			END
			RETURN
		END
		
		Y.OFS.VALUE:= "PROPERTY:1:1=":AA.PROPERY.NAME

		FOR PROP.I = 1 TO PAY.CNT
			ITER_1 = 1 + (3 * (PROP.I - 1))
			ITER_2 = 2 + (3 * (PROP.I - 1))
			ITER_3 = 3 + (3 * (PROP.I - 1))
			
			IF R.AA.PS.REC<AA.PS.PAYMENT.TYPE,PROP.I> NE 'CHARGE' THEN
				AAA.REQUEST<AA.ARR.ACT.FIELD.NAME,1,ITER_1> = "PAYMENT.TYPE:":PROP.I
				AAA.REQUEST<AA.ARR.ACT.FIELD.VALUE,1,ITER_1> = R.AA.PS.REC<AA.PS.PAYMENT.TYPE,PROP.I>

				AAA.REQUEST<AA.ARR.ACT.FIELD.NAME,1,ITER_2> = "PAYMENT.FREQ:":PROP.I
				AAA.REQUEST<AA.ARR.ACT.FIELD.VALUE,1,ITER_2> = R.AA.PS.REC<AA.PS.PAYMENT.FREQ,PROP.I>
				
				AAA.REQUEST<AA.ARR.ACT.FIELD.NAME,1,ITER_3> = "START.DATE:":PROP.I
				AAA.REQUEST<AA.ARR.ACT.FIELD.VALUE,1,ITER_3> = R.AA.PS.REC<AA.PS.START.DATE,PROP.I>
			END ELSE
				AAA.REQUEST<AA.ARR.ACT.FIELD.NAME,1,ITER_1> = "PAYMENT.TYPE:":PROP.I
				AAA.REQUEST<AA.ARR.ACT.FIELD.VALUE,1,ITER_1> = R.AA.PS.REC<AA.PS.PAYMENT.TYPE,PROP.I>

				AAA.REQUEST<AA.ARR.ACT.FIELD.NAME,1,ITER_2> = "PAYMENT.FREQ:":PROP.I
				AAA.REQUEST<AA.ARR.ACT.FIELD.VALUE,1,ITER_2> = FREQUENCY
				
				AAA.REQUEST<AA.ARR.ACT.FIELD.NAME,1,ITER_3> = "START.DATE:":PROP.I
				AAA.REQUEST<AA.ARR.ACT.FIELD.VALUE,1,ITER_3> = EFFECTIVE.DATE	
			END
		NEXT PROP.I
*DEBUG
		CALL OFS.BUILD.RECORD(APP.NAME, FUNCT, "PROCESS", OFSVERSION, "", NO.OF.AUTH, ARR.ACTIVITY.ID, AAA.REQUEST, OFS.RECORD)
		CALL OFS.CALL.BULK.MANAGER(options, OFS.RECORD, theResponse, txnCommitted)
		GOSUB LOG.REPORT
	RETURN
	
	GET.SCHEDULE.PROPERTLY.NAME:
	****************************
		PROPERTIES = AA.REC<AA.ARR.PROPERTY,1>
		PROPT.COUNT = DCOUNT(PROPERTIES,SM)
		FOR P = 1 TO PROPT.COUNT
			PRPT.ID = AA.REC<AA.ARR.PROPERTY,1,P>
			CALL F.READ(FN.AA.PROPERTY,PRPT.ID,R.AA.PROPERTY,F.AA.PROPERTY,AA.PR.ER)
			IF R.AA.PROPERTY<AA.PROP.PROPERTY.CLASS> EQ 'PAYMENT.SCHEDULE' THEN
				AA.PROPERY.NAME = PRPT.ID
				BREAK
			END
		NEXT P
	RETURN
	
	LOG.REPORT:
	***********
		V.SUC.FLAG = theResponse[',',1,1]
		OUTPUT.LOG = ACC.ID:'|':CHANGE.ACTIVITY:'|':V.SUC.FLAG
		
		IF txnCommitted EQ '1' THEN
			WRITESEQ OUTPUT.LOG TO Y.OUTPUT.PATH1 ELSE
			END
        END ELSE
			OUTPUT.LOG = OUTPUT.LOG:'|':theResponse
			WRITESEQ OUTPUT.LOG TO Y.OUTPUT.PATH ELSE
			END
		END
		CHANGE.ACTIVITY = ""
	RETURN
	
END